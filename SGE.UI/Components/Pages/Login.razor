@page "/login"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject IJSRuntime JSRuntime
@inject IServicioDeSecion servicioDeSecion
@inject CasoDeUsoUsuarioLogin CasoDeUsoUsuarioLogin

<h3>Login</h3>

@if (!string.IsNullOrEmpty(_messageerror))
{
    <div class="alert alert-danger" role="alert">
        @_messageerror
    </div>
}

@if (!string.IsNullOrEmpty(_successMessage))
{
    <div class="alert alert-success" role="alert">
        @_successMessage
    </div>
}

<form @onsubmit="LogUser" @onsubmit:preventDefault>
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" @bind="_email" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="_password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>

@code {
    private string _email;
    private string _password;
    private string _messageerror;
    private string _successMessage;

   private void LogUser()
    {
        try
        {
            Usuario result = CasoDeUsoUsuarioLogin.Ejecutar(_email, _password);
            if (result == null)
            {
                throw new Exception("Usuario o contrase√±a incorrectos");
            }
            _successMessage = "Usuario logueado correctamente";
            Console.WriteLine("Usuario logueado correctamente");
            servicioDeSecion.registrarSesion(result);
            NavigationManager.NavigateTo("/expedientes");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error al loguear usuario: " + ex.Message);
            _messageerror = ex.Message;
        }
    }
}
