@page "/register"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject CasoDeUsoUsuarioAlta CasoDeUsoUsuarioAlta
@inject IJSRuntime JS

<section class="container">

    <h1>Registro de Usuario</h1>

    <MensajeError @ref="mensajeError" />

    <form class="form" @onsubmit="RegisterUser" @onsubmit:preventDefault>
        <div class="form-group">
            <label for="nombre">Nombre:</label>
            <input type="text" class="form-control" id="nombre" @bind="@user.Nombre">
        </div>
        <div class="form-group">
            <label for="apellido">Apellido:</label>
            <input type="text" class="form-control" id="apellido" @bind="@user.Apellido">
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" class="form-control" id="email" @bind="@user.Email">
        </div>
        <div class="form-group">
            <label for="password">Contrase単a:</label>
            <input type="password" class="form-control" id="password" @bind="@user.Password">
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirmar Contrase単a:</label>
            <input type="password" class="form-control @(!string.IsNullOrEmpty(user.Password) && confirmPassword != user.Password ? "is-invalid" : "")" id="password" value="@confirmPassword" @oninput="@(e => confirmPassword = e.Value.ToString())" required=@(string.IsNullOrEmpty(user.Password) ? false : true)>
            <div class="invalid-feedback">
                Las contrase単as no coinciden
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Registrarse</button>
    </form>
</section>

@code {
    private Usuario user = new Usuario();
    private string? confirmPassword;
    MensajeError mensajeError;

    private void ExibirMensaje(string mensaje)
    {
        mensajeError._mensajeError = mensaje;
        mensajeError.Mostrar();
    }

    private async Task RegisterUser()
    {
        try{
            if(!string.IsNullOrEmpty(user.Password) && confirmPassword != user.Password){
                throw new Exception("Las contrase単as no coinciden");
            }
            
            Usuario result = CasoDeUsoUsuarioAlta.Ejecutar(user);

            await JS.InvokeAsync<string>("setUsuario", result);

            NavigationManager.NavigateTo("/expedientes", forceLoad: true);

        }catch(Exception e){
            Console.WriteLine(e.Message);
            ExibirMensaje(e.Message);
        }
    }
}