@rendermode InteractiveServer

<style>
    .dialogo-contenedor {
        position: fixed;
        top:0;
        left: 0;
        right: 0;
        bottom:0;
        background-color: rgba(0, 0, 0, 0.8);
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .dialogo-contenido{
        padding: 20px;
        background-color: #fefefe;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .btn-box{
        display: flex;
        justify-content: center;
        gap: 2rem;
        margin: 1rem 0rem;
    }
</style>

@if (visible)
{
    <div class="dialogo-contenedor">
        <div class="dialogo-contenido">
            <h3>@Mensaje</h3>
            <div class="btn-box">
                <button class="btn btn-primary" @onclick="CerrarYconfirmar">Aceptar</button>
                <button class="btn btn-secondary" @onclick="Cerrar">Cancelar</button>
            </div>
        </div>
    </div>
}

@code {
    private bool visible = false;
    [Parameter]
    public string Mensaje { get; set; } = "";
    [Parameter]
    public EventCallback OnConfirmado { get; set; }

    void CerrarYconfirmar()
    {
        visible = false;
        OnConfirmado.InvokeAsync();
    }

    public void Mostrar()
    {
        visible = true;
        StateHasChanged();
    }
    void Cerrar()
    {
        visible = false;
    }
}